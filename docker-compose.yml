version: '3'

services:
  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: always  # Reiniciar siempre si el contenedor se detiene

  web:
    build: ./backend
    container_name: django-app
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    restart: always  # Reiniciar siempre si el contenedor se detiene

  frontend:
    build: ./frontend
    container_name: react-app
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    networks:
      - app-network
    restart: always  # Reiniciar siempre si el contenedor se detiene

networks:
  app-network:
    driver: bridge

